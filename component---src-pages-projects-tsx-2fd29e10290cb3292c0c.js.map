{"version":3,"sources":["webpack:///./src/components/Badge.tsx","webpack:///./src/components/Project.tsx","webpack:///./src/components/images/Recharging.tsx","webpack:///./src/components/images/Uls.tsx","webpack:///./src/components/images/Cherry.tsx","webpack:///./src/pages/projects.tsx"],"names":["Wrapper","Badge","text","animationDelay","Math","random","ImageColumn","TextColumn","BadgesWrapper","props","right","mq","AlignedH2","Project","image","children","heading","badges","ImageBorder","map","badge","i","key","Recharging","data","sources","mobileImage","childImageSharp","fluid","desktopImage","media","Uls","Projects","id","MonoText","indentation","Cherry"],"mappings":"6lFAGMA,EAAU,mBAAH,oBAAG,CAAH,yNAgBE,SAASC,EAAT,GAAqC,IAApBC,EAAoB,EAApBA,KAC/B,OAAO,YAACF,EAAD,CAASG,eAAgC,GAAhBC,KAAKC,UAAgBH,G,gBCbhDI,EAAc,mBAAH,oBAAG,CAAH,yHAUXC,EAAa,mBAAH,oBAAG,CAAH,0EAMVC,EAAgB,mBAAH,oBAAG,CAAH,6EAMbR,EAAU,mBAAH,oBAAG,CAAH,2CAGM,SAAAS,GAAK,OAAKA,EAAMC,MAAQ,cAAgB,QAH9C,+CAONH,EAPM,2BASI,SAAAE,GAAK,OAAKA,EAAMC,MAAQ,WAAa,eATzC,4JAsBRC,IAAG,GAtBK,iBA0BTA,IAAG,GA1BM,qDAiCNL,EAjCM,cAmCTK,IAAG,GAnCM,iBAwCVA,IAAG,GAxCO,4BA6CPC,EAAY,kBAAH,oBAAG,CAAH,eACA,SAAAH,GAAK,OAAKA,EAAMC,MAAQ,MAAQ,UADhC,IAEZC,IAAG,GAFS,uBAeA,SAASE,EAAT,GAME,IALhBC,EAKgB,EALhBA,MACAC,EAIgB,EAJhBA,SACAC,EAGgB,EAHhBA,QACAC,EAEgB,EAFhBA,OACAP,EACgB,EADhBA,MAEA,OACC,4BACC,YAACE,EAAD,CAAWF,MAAOA,GAAQM,GAC1B,YAAC,EAAD,CAASN,MAAOA,GACf,YAACJ,EAAD,KACC,YAACY,EAAA,EAAD,KAAcJ,IAEf,YAACP,EAAD,KACC,YAACC,EAAD,KACES,EAAOE,KAAI,SAACC,EAAOC,GAAR,OACX,YAACpB,EAAD,CAAOC,KAAMkB,EAAOE,IAAG,QAAUD,QAGlCN,K,6DCtESQ,EAnCI,WAAM,YAClBC,EAAO,OAuBPC,EAAU,WACfD,EAAKE,mBADU,iBACf,EAAkBC,uBADH,aACf,EAAmCC,MADpB,2BAGXJ,EAAKK,oBAHM,iBAGX,EAAmBF,uBAHR,aAGX,EAAoCC,MAHzB,CAIdE,MAAO,wBAIT,OAAO,YAAC,IAAD,CAAKF,MAAOH,K,YCDLM,EA/BH,WAAM,YACXP,EAAO,OAmBPC,EAAU,WACfD,EAAKE,mBADU,iBACf,EAAkBC,uBADH,aACf,EAAmCC,MADpB,2BAGXJ,EAAKK,oBAHM,iBAGX,EAAmBF,uBAHR,aAGX,EAAoCC,MAHzB,CAIdE,MAAO,wBAIT,OAAO,YAAC,IAAD,CAAKF,MAAOH,K,YCGLF,EA/BI,WAAM,YAClBC,EAAO,OAmBPC,EAAU,WACfD,EAAKE,mBADU,iBACf,EAAkBC,uBADH,aACf,EAAmCC,MADpB,2BAGXJ,EAAKK,oBAHM,iBAGX,EAAmBF,uBAHR,aAGX,EAAoCC,MAHzB,CAIdE,MAAO,wBAIT,OAAO,YAAC,IAAD,CAAKF,MAAOH,KCvBJ,mBAAH,mBAAG,GAED,SAASO,IACvB,OACC,mBAAKC,GAAG,YACP,YAACC,EAAA,EAAD,CAAUhC,KAAK,aAAaiC,YAAa,IACzC,YAACtB,EAAD,CACCC,MAAO,YAAC,EAAD,MACPE,QAAQ,YACRC,OAAQ,CAAC,QAAS,QAAS,cAAe,SAE1C,6NAMA,+NAOD,YAACJ,EAAD,CACCC,MAAO,YAACsB,EAAD,MACPpB,QAAQ,qBACRC,OAAQ,CAAC,QAAS,QAClBP,OAAO,GAEP,kKAMD,YAACG,EAAD,CACCC,MAAO,YAAC,EAAD,MACPE,QAAQ,wBACRC,OAAQ,CACP,QACA,SACA,MACA,UACA,uBAGD,gOAMA,iNAOD,YAACiB,EAAA,EAAD,CAAUhC,KAAK,cAAciC,YAAa,O","file":"component---src-pages-projects-tsx-2fd29e10290cb3292c0c.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst Wrapper = styled.div<{ animationDelay: number }>`\n\tborder-radius: 10px;\n\tcolor: var(--white);\n\tbackground-color: var(--primary);\n\tbox-shadow: 2px 2px var(--secondary);\n\tmargin-right: 4px;\n\twidth: auto;\n\tdisplay: inline-block;\n\tpadding: 2px 5px;\n\tfont-weight: bolder;\n`;\n\ninterface BadgeProps {\n\ttext: string;\n}\n\nexport default function Badge({ text }: BadgeProps) {\n\treturn <Wrapper animationDelay={Math.random() * 10}>{text}</Wrapper>;\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport ImageBorder from './ImageBorder';\nimport Badge from './Badge';\nimport { mq } from '../utils';\n\nconst ImageColumn = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-right: 10px;\n\n\t& > *:first-of-type {\n\t\tmargin-bottom: 20px;\n\t}\n`;\n\nconst TextColumn = styled.div`\n\tpadding: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst BadgesWrapper = styled.div`\n\tmargin-bottom: 10px;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst Wrapper = styled.div<{ right?: boolean }>`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: ${props => (props.right ? 'row-reverse' : 'row')};\n\tmargin-bottom: 20px;\n\tfont-weight: lighter;\n\n\t& > ${TextColumn} {\n\t\twidth: 60%;\n\t\talign-items: ${props => (props.right ? 'flex-end' : 'flex-start')};\n\t\ttext-align: left;\n\t\tmargin: 0 20px;\n\t\tfont-size: 14pt;\n\n\t\t& > p {\n\t\t\twidth: 60%;\n\t\t\tmargin-bottom: 10px;\n\t\t\t&::first-letter {\n\t\t\t\tfont-weight: bolder;\n\t\t\t\tcolor: var(--primary);\n\t\t\t\tfont-size: 16pt;\n\t\t\t}\n\t\t\t${mq[1]} {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\t\t${mq[0]} {\n\t\t\twidth: 100%;\n\t\t\talign-items: flex-start;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n\n\t& > ${ImageColumn} {\n\t\twidth: 40%;\n\t\t${mq[0]} {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t${mq[0]} {\n\t\tflex-direction: column;\n\t}\n`;\n\nconst AlignedH2 = styled.h2<{ right?: boolean }>`\n\ttext-align: ${props => (props.right ? 'end' : 'start')};\n\t${mq[0]} {\n\t\ttext-align: start;\n\t}\n`;\n\ninterface ProjectProps {\n\timage: React.ReactNode;\n\theading: string;\n\tbadges: string[];\n\tchildren: React.ReactNode;\n\tright?: boolean;\n}\n\nexport default function Project({\n\timage,\n\tchildren,\n\theading,\n\tbadges,\n\tright,\n}: ProjectProps) {\n\treturn (\n\t\t<>\n\t\t\t<AlignedH2 right={right}>{heading}</AlignedH2>\n\t\t\t<Wrapper right={right}>\n\t\t\t\t<ImageColumn>\n\t\t\t\t\t<ImageBorder>{image}</ImageBorder>\n\t\t\t\t</ImageColumn>\n\t\t\t\t<TextColumn>\n\t\t\t\t\t<BadgesWrapper>\n\t\t\t\t\t\t{badges.map((badge, i) => (\n\t\t\t\t\t\t\t<Badge text={badge} key={`badge${i}`} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</BadgesWrapper>\n\t\t\t\t\t{children}\n\t\t\t\t</TextColumn>\n\t\t\t</Wrapper>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Recharging = () => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tmobileImage: file(\n\t\t\t\trelativePath: { eq: \"projects/recharging-dashboard.png\" }\n\t\t\t) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 1000, quality: 100) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdesktopImage: file(\n\t\t\t\trelativePath: { eq: \"projects/recharging-dashboard.png\" }\n\t\t\t) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 2000, quality: 100) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst sources = [\n\t\tdata.mobileImage?.childImageSharp?.fluid,\n\t\t{\n\t\t\t...data.desktopImage?.childImageSharp?.fluid,\n\t\t\tmedia: `(min-width: 768px)`,\n\t\t},\n\t];\n\n\treturn <Img fluid={sources} />;\n};\n\nexport default Recharging;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Uls = () => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tmobileImage: file(relativePath: { eq: \"projects/uls.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 1000, quality: 100) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdesktopImage: file(relativePath: { eq: \"projects/uls.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 2000, quality: 100) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst sources = [\n\t\tdata.mobileImage?.childImageSharp?.fluid,\n\t\t{\n\t\t\t...data.desktopImage?.childImageSharp?.fluid,\n\t\t\tmedia: `(min-width: 768px)`,\n\t\t},\n\t];\n\n\treturn <Img fluid={sources} />;\n};\n\nexport default Uls;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Recharging = () => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tmobileImage: file(relativePath: { eq: \"projects/cherry.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 1000, quality: 100) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdesktopImage: file(relativePath: { eq: \"projects/cherry.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(maxWidth: 2000, quality: 100) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst sources = [\n\t\tdata.mobileImage?.childImageSharp?.fluid,\n\t\t{\n\t\t\t...data.desktopImage?.childImageSharp?.fluid,\n\t\t\tmedia: `(min-width: 768px)`,\n\t\t},\n\t];\n\n\treturn <Img fluid={sources} />;\n};\n\nexport default Recharging;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Project from '../components/Project';\nimport MonoText from '../components/MonoText';\nimport RechargingPic from '../components/images/Recharging';\nimport UlsPic from '../components/images/Uls';\nimport CherryPic from '../components/images/Cherry';\n\nconst Wrapper = styled.div``;\n\nexport default function Projects() {\n\treturn (\n\t\t<div id=\"projects\">\n\t\t\t<MonoText text=\"<Projects>\" indentation={0} />\n\t\t\t<Project\n\t\t\t\timage={<RechargingPic />}\n\t\t\t\theading=\"Smart Pub\"\n\t\t\t\tbadges={['React', 'Redux', 'Redux Thunk', 'REST']}\n\t\t\t>\n\t\t\t\t<p>\n\t\t\t\t\tProject that focuses on gamification of student pubs via\n\t\t\t\t\tgames and events. I'm responsible for frontend architecture,\n\t\t\t\t\tweb administration and some of those games, that are\n\t\t\t\t\tdisplayed in live in pub.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tTechnology stack is React with React Redux and Thunk for\n\t\t\t\t\tlocal state and generated REST API interface thanks to\n\t\t\t\t\tSwagger. I also setted up Eureka and Swagger server in our\n\t\t\t\t\tmicroservice architecture.\n\t\t\t\t</p>\n\t\t\t</Project>\n\t\t\t<Project\n\t\t\t\timage={<CherryPic />}\n\t\t\t\theading=\"Barmans cheatsheet\"\n\t\t\t\tbadges={['React', 'REST']}\n\t\t\t\tright={true}\n\t\t\t>\n\t\t\t\t<p>\n\t\t\t\t\tSimple application that helps newbie barmans know what type\n\t\t\t\t\tof glass to use, what are the ingredients, what type of\n\t\t\t\t\tshake, garnish, etc.\n\t\t\t\t</p>\n\t\t\t</Project>\n\t\t\t<Project\n\t\t\t\timage={<UlsPic />}\n\t\t\t\theading=\"Ukulele learning site\"\n\t\t\t\tbadges={[\n\t\t\t\t\t'React',\n\t\t\t\t\t'NodeJS',\n\t\t\t\t\t'SSR',\n\t\t\t\t\t'GraphQL',\n\t\t\t\t\t'Apollo local state',\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<p>\n\t\t\t\t\tUkulele learning site is working name for application for my\n\t\t\t\t\tbacheleors thesis. It focuses on easy interface and haveing\n\t\t\t\t\tall functionalities that have existing applications spread\n\t\t\t\t\tbetween themselves.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tFrontend of the application is NRG stack with Apollo Client\n\t\t\t\t\tand Node, GraphQL and Apollo Server for backend. Application\n\t\t\t\t\tis divided into independent modules based on bussines\n\t\t\t\t\tdomains.\n\t\t\t\t</p>\n\t\t\t</Project>\n\t\t\t<MonoText text=\"</Projects>\" indentation={0} />\n\t\t</div>\n\t);\n}\n\n// Smart pub\n// TAGS: React, Redux, Redux Thunk, REST\n// Project that focuses on gamification of student pubs via games and events. I'm responsible for frontend architecture, web administration and some of those games, that are displayed in live in pub. Technology stack is React with React Redux and Thunk for local state and generated REST API interface thanks to Swagger. I also setted up Eureka and Swagger server in our microservice architecture.\n"],"sourceRoot":""}